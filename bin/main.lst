                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _set_sprite_data
                                     13 	.globl _delay
                                     14 	.globl _sprite_1
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area _DATA
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _INITIALIZED
      000000                         26 _sprite_1::
      000000                         27 	.ds 32
                                     28 ;--------------------------------------------------------
                                     29 ; absolute external ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _DABS (ABS)
                                     32 ;--------------------------------------------------------
                                     33 ; global & static initialisations
                                     34 ;--------------------------------------------------------
                                     35 	.area _HOME
                                     36 	.area _GSINIT
                                     37 	.area _GSFINAL
                                     38 	.area _GSINIT
                                     39 ;--------------------------------------------------------
                                     40 ; Home
                                     41 ;--------------------------------------------------------
                                     42 	.area _HOME
                                     43 	.area _HOME
                                     44 ;--------------------------------------------------------
                                     45 ; code
                                     46 ;--------------------------------------------------------
                                     47 	.area _CODE
                                     48 ;.\src\main.c:18: void main(){
                                     49 ;	---------------------------------
                                     50 ; Function main
                                     51 ; ---------------------------------
      000000                         52 _main::
                                     53 ;.\src\main.c:19: UINT8 currentSpriteIndex = 0;   // unsigned int of 8 byte because of speed and memory optimisation
      000000 0E 00            [ 8]   54 	ld	c, #0x00
                                     55 ;.\src\main.c:20: set_sprite_data(0,2, sprite_1); // add to sprite memory the 2 tile of sprite_1
      000002 11r00r00         [12]   56 	ld	de, #_sprite_1
      000005 D5               [16]   57 	push	de
      000006 21 00 02         [12]   58 	ld	hl, #0x200
      000009 E5               [16]   59 	push	hl
      00000A CDr00r00         [24]   60 	call	_set_sprite_data
      00000D E8 04            [16]   61 	add	sp, #4
                                     62 ;C:/gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      00000F 21r02r00         [12]   63 	ld	hl, #(_shadow_OAM + 2)
      000012 36 00            [12]   64 	ld	(hl), #0x00
                                     65 ;C:/gbdk/include/gb/gb.h:1675: OAM_item_t * itm = &shadow_OAM[nb];
      000014 21r00r00         [12]   66 	ld	hl, #_shadow_OAM
                                     67 ;C:/gbdk/include/gb/gb.h:1676: itm->y=y, itm->x=x;
      000017 3E 4E            [ 8]   68 	ld	a, #0x4e
      000019 22               [ 8]   69 	ld	(hl+), a
      00001A 36 58            [12]   70 	ld	(hl), #0x58
                                     71 ;.\src\main.c:23: SHOW_SPRITES;                   // update the sprites layer ...
      00001C F0r00            [12]   72 	ldh	a, (_LCDC_REG + 0)
      00001E F6 02            [ 8]   73 	or	a, #0x02
      000020 E0r00            [12]   74 	ldh	(_LCDC_REG + 0), a
                                     75 ;.\src\main.c:25: while(1){   // game loop
      000022                         76 00105$:
                                     77 ;.\src\main.c:26: if(currentSpriteIndex == 0){
      000022 79               [ 4]   78 	ld	a, c
      000023 B7               [ 4]   79 	or	a, a
                                     80 ;.\src\main.c:27: currentSpriteIndex = 1;
                                     81 ;.\src\main.c:30: currentSpriteIndex = 0;
      000024 0E 01            [ 8]   82 	ld	c, #0x01
      000026 28 02            [12]   83 	jr	Z, 00103$
      000028 0E 00            [ 8]   84 	ld	c, #0x00
      00002A                         85 00103$:
                                     86 ;C:/gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      00002A 21r02r00         [12]   87 	ld	hl, #(_shadow_OAM + 2)
      00002D 71               [ 8]   88 	ld	(hl), c
                                     89 ;.\src\main.c:34: delay(1000); // TODO : FIND AN NON BLOCKING WAIT FUNCTION
      00002E C5               [16]   90 	push	bc
      00002F 11 E8 03         [12]   91 	ld	de, #0x03e8
      000032 CDr00r00         [24]   92 	call	_delay
      000035 C1               [12]   93 	pop	bc
                                     94 ;.\src\main.c:36: }
      000036 18 EA            [12]   95 	jr	00105$
                                     96 	.area _CODE
                                     97 	.area _INITIALIZER
      000000                         98 __xinit__sprite_1:
      000000 7E                      99 	.db #0x7e	; 126
      000001 7E                     100 	.db #0x7e	; 126
      000002 BD                     101 	.db #0xbd	; 189
      000003 C3                     102 	.db #0xc3	; 195
      000004 C3                     103 	.db #0xc3	; 195
      000005 FF                     104 	.db #0xff	; 255
      000006 FF                     105 	.db #0xff	; 255
      000007 BD                     106 	.db #0xbd	; 189
      000008 DB                     107 	.db #0xdb	; 219
      000009 A5                     108 	.db #0xa5	; 165
      00000A FF                     109 	.db #0xff	; 255
      00000B A5                     110 	.db #0xa5	; 165
      00000C 66                     111 	.db #0x66	; 102	'f'
      00000D 5A                     112 	.db #0x5a	; 90	'Z'
      00000E 3C                     113 	.db #0x3c	; 60
      00000F 3C                     114 	.db #0x3c	; 60
      000010 7E                     115 	.db #0x7e	; 126
      000011 7E                     116 	.db #0x7e	; 126
      000012 89                     117 	.db #0x89	; 137
      000013 F7                     118 	.db #0xf7	; 247
      000014 C3                     119 	.db #0xc3	; 195
      000015 BD                     120 	.db #0xbd	; 189
      000016 BD                     121 	.db #0xbd	; 189
      000017 FF                     122 	.db #0xff	; 255
      000018 FF                     123 	.db #0xff	; 255
      000019 C3                     124 	.db #0xc3	; 195
      00001A FF                     125 	.db #0xff	; 255
      00001B A5                     126 	.db #0xa5	; 165
      00001C 7E                     127 	.db #0x7e	; 126
      00001D 42                     128 	.db #0x42	; 66	'B'
      00001E 3C                     129 	.db #0x3c	; 60
      00001F 3C                     130 	.db #0x3c	; 60
                                    131 	.area _CABS (ABS)
